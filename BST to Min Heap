#include <bits/stdc++.h> 
/*************************************************************
    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
void inorderTraversal(BinaryTreeNode<int>* root, vector<int> &inorder){
    if(root==NULL)
    return;

    inorderTraversal(root->left, inorder);
    inorder.push_back(root->data);
    inorderTraversal(root->right, inorder);
}

void fillPreorder(BinaryTreeNode<int>* root, vector<int> &inorder, int &index){
    if(root==NULL)
    return;

    root->data=inorder[index++];
    fillPreorder(root->left,inorder,index);
    fillPreorder(root->right,inorder,index);
}
BinaryTreeNode<int>* bstToMinHeap(BinaryTreeNode<int>* root) 
{
    // Write your code here
    // Return root of the heap
    vector<int> inorder;
    inorderTraversal(root, inorder);
    int index=0;
    fillPreorder(root,inorder, index);
    return root;
}
