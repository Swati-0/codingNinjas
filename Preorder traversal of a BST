#include <bits/stdc++.h> 
/*
    Following is the class structure of BinaryTreeNode class for referance:

    class BinaryTreeNode {
       public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };
*/

BinaryTreeNode<int>*solve(int mini,int maxi,vector<int> &preorder,int &i){
    if(i>=preorder.size()) 
    return NULL;

    if (mini > preorder[i]|| maxi < preorder[i]) 
    return NULL;

    BinaryTreeNode<int>*root=new BinaryTreeNode<int>(preorder[i++]);
    root->left=solve(mini,root->data,preorder,i);
    root->right=solve(root->data,maxi,preorder,i);
    return root;
}

BinaryTreeNode<int>* preorderToBST(vector<int> &preorder) {
    // Write your code here.
    int mini=INT_MIN;
    int maxi=INT_MAX;
    int i=0;
    return solve(mini,maxi,preorder,i);
}
