/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(head==NULL || head->next==NULL)
     return head;

     Node* tail=head;
     int cnt=0;
     while(tail){
          tail=tail->next;
          cnt++;
     }
     if(k>cnt){
          k=k%cnt;
     }
     if(k==0 || k==cnt)
     return head;
     
     k=cnt-k;
     
     tail=head;
     Node* prev=NULL;
     while(k--){
          prev=tail;
          tail=tail->next;
     }
     prev->next=NULL;
     prev=tail;
     while(prev->next)
     prev=prev->next;

     prev->next=head;
     return tail;
}
